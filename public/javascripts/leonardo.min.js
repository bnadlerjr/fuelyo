
Raphael.fn.hLine=function(x,y,width){return this.path(["M",x,y,"h",width]);};Raphael.fn.vLine=function(x,y,height){return this.path(["M",x,y,"v",height]);};Raphael.fn.line=function(x1,y1,x2,y2){return this.path(["M",x1,y1,"L",x2,y2]);};Raphael.fn.lineTo=function(x,y){if(this.cache){this.path(["M",this.cache.lastX,this.cache.lastY,"L",x,y]);}
this.cache={lastX:x,lastY:y};};var Leonardo={};Leonardo=(function(){var paper,plotArea={},scaleValues=[],maxValue,opts={'width':300,'height':200,'padding':10,'barWidth':5,'tickSize':5,'drawBorder':true,'plotAreaPercentage':0.9,'scaleSize':5};function extend(target,obj){var i,toStr=Object.prototype.toString,aStr="[object Array]";target=target||{};for(i in obj){if(obj.hasOwnProperty(i)){if(typeof obj[i]==="object"){target[i]=(toStr.call(obj[i])===aStr)?[]:{};extend(obj[i],target[i]);}else{target[i]=obj[i];}}}
return target;}
function getMaxValue(series){var data=[],item;for(item in series){if(series.hasOwnProperty(item)){data=data.concat(series[item]);}}
return Math.max.apply(Math,data);}
function init(domID,max,options){opts=extend(opts,options||{});maxValue=max;var paddedWidth=opts.width-(opts.padding*2),paddedHeight=opts.height-(opts.padding*2),axisAreaPercentage=1-opts.plotAreaPercentage,ratio=maxValue/opts.scaleSize,i=opts.scaleSize;plotArea.x=axisAreaPercentage*paddedWidth+opts.padding;plotArea.y=opts.padding;plotArea.width=opts.plotAreaPercentage*paddedWidth;plotArea.height=paddedHeight-(axisAreaPercentage/2*opts.height);scaleValues[0]=0;while(i--){scaleValues.push(((i+1)*ratio).toFixed(0));}
paper=new Raphael(domID,opts.width,opts.height);}
function plot(values,drawingCallback){var xStep=plotArea.width/(values.length),paddedHeight=plotArea.height+opts.padding,adjustedHeight=paddedHeight>opts.height?plotArea.height+1:paddedHeight,xOffset=plotArea.x,yOffset;values.forEach(function(value,index){xOffset+=(0===index)?3:xStep;yOffset=adjustedHeight-(value/maxValue*plotArea.height);drawingCallback(xOffset,yOffset,value);});}
function drawBorder(width,height){paper.rect(0,0,width,height);}
function drawXAxis(labels){paper.hLine(plotArea.x,plotArea.y+plotArea.height,plotArea.width);var labelY=plotArea.y+plotArea.height,labelTextY=labelY+(2*opts.tickSize);plot(labels,function(x,y,label){paper.vLine(x,labelY,opts.tickSize);paper.text(x,labelTextY,label);});}
function drawYAxis(){paper.vLine(plotArea.x,plotArea.y,plotArea.height);var valueX=plotArea.x-opts.tickSize,valueTextX=plotArea.x-(3*opts.tickSize);plot(scaleValues,function(x,y,value){paper.hLine(valueX,y,opts.tickSize);paper.text(valueTextX,y,value);});}
return{columnChart:function(domID,series,labels,options){init(domID,getMaxValue(series),options||{});if(opts.drawBorder){drawBorder(opts.width,opts.height);}
drawXAxis(labels);drawYAxis();var adjustedHeight=plotArea.height+opts.padding,seriesOffset=0,item;for(item in series){if(series.hasOwnProperty(item)){plot(series[item],function(x,y,value){paper.rect(x+seriesOffset,y,opts.barWidth,adjustedHeight-y);});seriesOffset+=opts.barWidth;}}},lineChart:function(domID,series,labels,options){init(domID,getMaxValue(series),options||{});if(opts.drawBorder){drawBorder(opts.width,opts.height);}
drawXAxis(labels);drawYAxis();for(var item in series){if(series.hasOwnProperty(item)){plot(series[item],function(x,y,value){paper.lineTo(x,y);});}}},sparkline:function(domID,data,options){opts=extend(opts,options||{});plotArea.x=opts.padding;plotArea.width=opts.width-(opts.padding*2);plotArea.height=opts.height;maxValue=Math.max.apply(Math,data);paper=new Raphael(domID,opts.width,opts.height);plot(data,function(x,y){paper.lineTo(x,y);});},oneBar:function(domID,percentageAsDecimal,options){opts=extend(opts,options||{});var paddedHeight=opts.height-2;paper=new Raphael(domID,opts.width,opts.height);paper.rect(0,1,percentageAsDecimal*opts.width,paddedHeight);if(opts.showPercentage){paper.text(opts.padding*2,paddedHeight/2,(percentageAsDecimal*100).toFixed(0)+"%");}}};}());